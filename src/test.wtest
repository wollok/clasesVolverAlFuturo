import volver.*


describe "Teste de volver al futuro" {
	
//  Para hacer mas tests
//	const lentes = new Elemento( anioOrigen = 1985,descripcion = "estan rotos")
//	const perro = new Elemento( anioOrigen = 1980,descripcion = "ladra")
//	const arena = new Elemento(anioOrigen = 1985,descripcion = "Carlos Gesell")
//	const mate = new Elemento(anioOrigen = 2000,descripcion = "el termo se vende por separado")
//	const sanMartin = new Lugar(nombre = "San Martin", habitantes = [])

	const gesell = new Lugar(nombre = "Gesell",habitantes = [biff])
	

	test "viajar en el delorean con nafta hace que marty envejezca y el doc rejuvenezca" {
		deLorean.viajarEnElTiempo(1885)
		assert.equals(marty.edad(),30)
		assert.equals(docBrown.edad(),61)
	}
	test "viajar en el delorean con nafta hace que marty sea mas bajo"{
		const altura = marty.altura()
		deLorean.combustible(nafta)
		deLorean.viajarEnElTiempo(1885)
		assert.equals(altura-1, marty.altura())
	}

	test "viajar en el delorean con electricidad hace que marty pierda su elemento mas antiguo"{
		const elem = marty.pertenenciaMasAntigua()
		deLorean.combustible(energiaElectrica)
		deLorean.viajarEnElTiempo(1885)	
		assert.notEquals(elem,marty.pertenenciaMasAntigua())
	}

	test "marty viaja al a√±o 2000, su patineta sufre una paradoja, su foto no"{
		const descripcionPatineta = patineta.descripcion()
		const descripcionFoto = fotoFamilia.descripcion()
		deLorean.viajarEnElTiempo(2000)
		assert.notEquals(descripcionPatineta, patineta.descripcion())
		assert.equals(descripcionFoto, fotoFamilia.descripcion())
	}

	test "marty viaja a gesell, y tiene algo de gesell"{
		deLorean.viajarEnElEspacio(gesell)
		assert.that(marty.tieneAlgoDe(gesell))
	}
	
	test "En gesell no hay nadie con algo del lugar" {
		assert.notThat(gesell.hayAlguienConAlgoDelLugar())
	}
	
	test "Si el delorean va a gesell, hay nadie con algo del lugar" {
		deLorean.viajarEnElEspacio(gesell)
		assert.that(gesell.hayAlguienConAlgoDelLugar())
	}
	
	
}